  name: Build Wails Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # 手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest # 使用 Ubuntu 作为运行环境

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 设置 Go 环境
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      # 缓存 Go 依赖
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build # 缓存构建文件
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 缓存 Node.js 依赖
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # 安装 MinGW 用于交叉编译
      - name: Install MinGW for cross-compilation
        run: sudo apt-get install -y mingw-w64

      # 安装 Wails CLI
      - name: Install Wails CLI
        run: |
          export GO111MODULE=on
          export GOBIN=$HOME/go/bin
          mkdir -p $GOBIN
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # 添加 Wails CLI 路径到环境变量
      - name: Add GOBIN to PATH
        run: echo "$HOME/go/bin" >> $GITHUB_PATH

      # 安装 Go 项目依赖
      - name: Install Go dependencies
        run: go mod tidy

      # 安装前端依赖（如果项目有前端）
      - name: Install frontend dependencies
        run: |
          if [ -f package.json ]; then
            npm install
            npm run build
          else
            echo "No package.json found, skipping frontend setup."
          fi

      # 构建 Windows 平台的 EXE 文件
      - name: Build Windows EXE
        run: wails build -platform windows/amd64

      # 保存构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Wails-Executable
          path: build/bin/*.exe

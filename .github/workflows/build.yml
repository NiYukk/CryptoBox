name: Build Wails Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 缓存 Go 安装
      - name: Cache Go installation
        uses: actions/cache@v3
        with:
          path: /usr/local/go
          key: go-${{ runner.os }}-1.20.5
          restore-keys: |
            go-${{ runner.os }}-

      # 安装 Go 如果缓存没有命中
      - name: Ensure fresh Go installation
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: |
          sudo rm -rf /usr/local/go
          curl -LO https://golang.org/dl/go1.20.5.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz
          echo "export PATH=/usr/local/go/bin:$PATH" >> $GITHUB_ENV

      # 缓存 Wails CLI
      - name: Cache Wails CLI
        uses: actions/cache@v3
        with:
          path: $HOME/go/bin/wails
          key: wails-cli-${{ runner.os }}-latest
          restore-keys: |
            wails-cli-${{ runner.os }}-

      # 安装 Wails CLI 如果缓存没有命中
      - name: Install Wails CLI
        if: steps.cache-wails-cli.outputs.cache-hit != 'true'
        run: |
          mkdir -p $HOME/go/bin
          export GOBIN=$HOME/go/bin
          export PATH=$GOBIN:$PATH
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # 创建软链接，将 CryptoBox/wails.json 链接到根目录
      - name: Create symlink for wails.json in root directory
        run: |
          ln -s $GITHUB_WORKSPACE/CryptoBox/wails.json $GITHUB_WORKSPACE/wails.json

      # Debug: List files to check for wails.json in root directory
      - name: List files in the root directory to check for wails.json
        run: |
          echo "Listing files in the root directory to ensure wails.json exists:"
          ls -la $GITHUB_WORKSPACE

      # 检查 wails.json 是否存在
      - name: Check for wails.json file
        run: |
          if [ ! -f "$GITHUB_WORKSPACE/wails.json" ]; then
            echo "ERROR: wails.json not found"
            exit 1
          else
            echo "wails.json found."
          fi

      # 构建 Windows 平台可执行文件
      - name: Build Windows EXE
        run: |
          export PATH=$HOME/go/bin:$PATH
          cd $GITHUB_WORKSPACE  # Ensure we're in the root directory of the repo
          wails build -platform windows/amd64

      # 上传构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Wails-Executable
          path: build/bin/*.exe
